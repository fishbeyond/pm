<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-http="http://www.springframework.org/schema/integration/http"
       xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
       xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                  http://www.springframework.org/schema/beans/spring-beans.xsd
                  http://www.springframework.org/schema/integration
                  http://www.springframework.org/schema/integration/spring-integration.xsd
                  http://www.springframework.org/schema/integration/http
                  http://www.springframework.org/schema/integration/http/spring-integration-http.xsd
                  http://www.springframework.org/schema/integration/jdbc
                  http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd http://www.springframework.org/schema/integration/xml http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd">


    <int-http:inbound-gateway supported-methods="GET,POST" path="/{service}/{method}.json"
                              request-channel="wcServiceChannel" error-channel="wcOutputChannel"
                              reply-timeout="5000" reply-channel="jsonReplayChannel"
                              mapped-request-headers="Content-Type,user-agent,host,outbound"
                              mapped-response-headers="Content-Type">
        <int-http:header name="headerPath" expression="#pathVariables.service + '.' + #pathVariables.method"/>
    </int-http:inbound-gateway>

    <int:channel id="wcServiceChannel"/>
    <int:chain input-channel="wcServiceChannel" output-channel="wcOutputChannel">
        <int:enricher>
            <int:property name="userId" expression="@securityFilter.findUserIdByToken(payload[token])"/>
        </int:enricher>
        <int:enricher>
            <int:property name="operatorName" expression="@securityFilter.findOperatorByToken(payload[userId])"/>
        </int:enricher>
        <int:gateway request-channel="wcServiceRouter" error-channel="noWcServerChannel"/>
        <int:gateway request-channel="wcPayloadRouter" error-channel="noWcPayloadChannel"/>
    </int:chain>

    <int:channel id="wcServiceRouter"/>
    <int:header-value-router header-name="headerPath" input-channel="wcServiceRouter" resolution-required="false"
                             default-output-channel="noWcServerChannel">
    </int:header-value-router>

    <int:channel id="wcPayloadRouter"/>
    <int:payload-type-router input-channel="wcPayloadRouter" default-output-channel="noWcPayloadChannel">
        <int:mapping type="com.hs.whocan.framework.transform.JsonResult" channel="noWcServerChannel"/>
        <int:mapping type="com.hs.whocan.service.WhoCanExecutor" channel="serviceChannel"/>
    </int:payload-type-router>

    <int:chain input-channel="serviceChannel">
        <int:service-activator expression="payload.execute()"/>
    </int:chain>

    <int:channel id="wcOutputChannel"/>
    <int:payload-type-router input-channel="wcOutputChannel" default-output-channel="wcJsonSuccessChannel">
        <int:mapping type="com.hs.whocan.framework.transform.JsonResult" channel="resultToJson"/>
        <int:mapping type="java.lang.Exception" channel="wcExceptionResultChannel"/>
    </int:payload-type-router>
    <int:service-activator input-channel="wcJsonSuccessChannel" output-channel="resultToJson"
                           expression="@jsonResultService.createSuccessResult(payload)"/>

    <int:transformer input-channel="wcExceptionResultChannel" output-channel="resultToJson"
                     expression="@jsonResultService.createExceptionResult(payload)"/>

    <int:transformer input-channel="noWcServerChannel" output-channel="resultToJson"
                     expression="@jsonResultService.createExceptionResult('服务不存在')"/>

    <int:transformer input-channel="noWcPayloadChannel" output-channel="resultToJson"
                     expression="@jsonResultService.createExceptionResult('payload不存在')"/>

    <int:channel id="jsonReplayChannel"/>
    <int:object-to-json-transformer input-channel="resultToJson" output-channel="jsonReplayChannel"
                                    content-type="text/json;charset=utf-8"/>
</beans>